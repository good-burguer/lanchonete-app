name: CI - PR (build & tests)

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  ci-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (1) Setup Python (para instalar deps e rodar testes rápidos)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # dependências de teste (ajuste se tiver arquivo separado)
          pip install pytest

      - name: Lint (opcional, rápido)
        run: |
          pip install ruff
          ruff check app || true  # não falha o PR por enquanto

      - name: Run tests (se existirem)
        run: |
          # pytest sai com código 5 se não houver testes; tratamos para não falhar o workflow
          pytest -q || if [ $? -eq 5 ]; then echo "No tests collected"; else exit 1; fi

      # (2) Build do container (sem push) para garantir que a imagem compila no PR
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker build (linux/amd64, no push)
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --provenance=false --sbom=false \
            -t lanchonete-app:ci-pr .

      - name: Create tests directory and add test_health.py
        run: |
          mkdir -p tests
          cat <<EOF > tests/test_health.py
          from fastapi.testclient import TestClient
          from app.main import app

          client = TestClient(app)

          def test_health_endpoint():
              response = client.get("/health/")
              assert response.status_code == 200
              assert response.json() == {"status": "ok"}
          EOF